---

# CHECK
# loop over all versions that need to be installed:
# options:
#   - amd_apm_release: 2020.1? - 2025.1
#   - tools: vitis and/or vivado

    #- "Vitis"
    #- "Vitis_HLS"
    #- "Vivado"
    #- "Model_Composer"
- name: Vitis pre install check
  stat:
    path: "{{ amd_apm_vitis_core_install_path }}/Vitis/{{ release }}"
  with_list: "{{ amd_apm_releases }}"
  register: amd_apm_vitis_core_pre_install_vitis_check
  loop_control:
    loop_var: release

- name: Vivado pre install check
  stat:
    path: "{{ amd_apm_vitis_core_install_path }}/Vivado/{{ release }}"
  with_list: "{{ amd_apm_releases }}"
  register: amd_apm_vitis_core_pre_install_vivado_check
  loop_control:
    loop_var: release

# REMOVE

- name: Remove other Vitis/Vivado releases
  include_tasks: ./uninstall-vitis-core.yml
  when: amd_apm_vitis_core_remove_other_releases


#TODO: check if 300GB is correct or too conservative
#TODO: correct for already installed versions
- name: "Assert that there is enough space (300 GB per release: so >{{ 300*amd_apm_releases|length }}GB for {{amd_apm_releases|length}} release(s)) on disk for tools installation"
  assert:
    that: ansible_mounts | selectattr('mount', 'equalto', '/') | map(attribute='size_available') | first | int is gt (amd_apm_releases|length * 300000000000)
    fail_msg: "Disk does not have the minimum space required to Install Vitis Core Development Kit (300Gb requested). Consider making space on drive or only installing vivado by setting `amd_apm_vitis_core_install_vitis: false` to the variables of your playbook"
  when: amd_apm_vitis_core_install_vitis

- name: Set AMD Toolchain path facts
  set_fact:
    amd_apm_vitis_core_download_path: "{{ amd_apm_download_path }}/vitis-core"
    amd_apm_vitis_core_extraction_path: "{{ amd_apm_vitis_core_download_path }}/{{ amd_apm_vitis_core_package }}"


# DOWNLOAD
# runs when:
#   - vivado release directory does not exist
#   or
#   - vitis should be installed and the specific vitis release directory does not exist
- name: Download AMD Toolchain
  include_tasks:
    file: "./download-{% if amd_apm_download_locally %}local{% else %}remote{% endif %}.yml"
  with_list: "{{ amd_apm_vitis_core_pre_install_vivado_check.results }}"
  vars:
    amd_apm_release: "{{ item.release }}"
  when: >
      item.stat.exists == false or
      amd_apm_vitis_core_install_vitis and
      not amd_apm_vitis_core_pre_install_vitis_check.results | list | selectattr('release', 'equalto', item.release) | selectattr('stat.exists')


# INSTALL
# runs when:
#   - vivado release directory does not exist
#   or
#   - vitis should be installed and the specific vitis release directory does not exist
- name: Install AMD Toolchain
  include_tasks: ./install-vitis-core.yml
  with_list: "{{ amd_apm_vitis_core_pre_install_vivado_check.results }}"
  vars:
    amd_apm_release: "{{ item.release }}"
  when: >
      item.stat.exists == false or
      amd_apm_vitis_core_install_vitis and
      not amd_apm_vitis_core_pre_install_vitis_check.results | list | selectattr('release', 'equalto', item.release) | selectattr('stat.exists')
