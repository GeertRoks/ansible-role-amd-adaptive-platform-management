---

- name: Gather directories of releases to delete
  find:
    paths: "{{ amd_apm_vitis_core_install_path }}"
    file_type: directory
    excludes: "{{ amd_apm_releases }}"
  register: vitis_core_release_directories_to_delete

- name: Delete older release directories
  file:
    path: "{{ item.path }}"
    state: absent
  with_list: "{{ vitis_core_release_directories_to_delete['files'] }}"

- name: "Remove all AMD tool related settings from bash that are not of {{ amd_apm_releases | first }} release"
  when:
    - amd_apm_releases | length == 1
    - amd_apm_vitis_core_set_bash_environment_variables
  block:
    - name: "Remove any source scripts from general bashrc that are not of {{ amd_apm_releases | first }} release"
      lineinfile:
        path: /etc/bash.bashrc
        regexp: '^source\s+{{ amd_apm_vitis_core_install_path }}/{{ item }}/(?!({{ amd_apm_releases | first }}))[^/]+/settings64\.sh'
        state: absent
      loop:
        - "Vivado"
        - "Vitis_HLS"
        - 'Vitis'
        - "Model_Composer"

    - name: "Remove any Vitis Model Composer from system-wide PATH that are note of {{ amd_apm_releases | first }} release"
      lineinfile:
        path: /etc/bash.bashrc
        regexp: '^export\s+PATH={{ amd_apm_vitis_core_install_path }}/Model_Composer/(?!({{ amd_apm_releases | first }}))[^/]+/bin:\$PATH'
        state: absent

- name: Remove all AMD tool related settings from bash
  when:
    - (amd_apm_releases | length gt 1) or not amd_apm_vitis_core_set_bash_environment_variables
  block:
    - name: Remove all source scripts from general bashrc
      lineinfile:
        path: /etc/bash.bashrc
        regexp: '^source\s+{{ amd_apm_vitis_core_install_path }}/{{ item }}/[^/]+/settings64\.sh'
        state: absent
      loop:
        - "Vivado"
        - "Vitis_HLS"
        - 'Vitis'
        - "Model_Composer"

    - name: Remove all Vitis Model Composer from system-wide PATH
      lineinfile:
        path: /etc/bash.bashrc
        regexp: '^export\s+PATH={{ amd_apm_vitis_core_install_path }}/Model_Composer/[^/]+/bin:\$PATH'
        state: absent

#- name: Gather Facts about Vitis directory
#  stat:
#    path: "{{ amd_apm_vitis_core_install_path }}/Vitis/{{ amd_apm_release }}"
#  register: Vitis_version_directory
#
#- name: Check if Vitis version directory exists
#  assert:
#    that: Vitis_version_directory.stat.exists == true
#
#- name: Find all directories in the Vivado folder
#  find:
#    paths:
#      - "{{ amd_apm_vitis_core_install_path }}/Vitis"
#      - "{{ amd_apm_vitis_core_install_path }}/Vitis_HLS"
#      - "{{ amd_apm_vitis_core_install_path }}/Vivado"
#    file_type: "directory"
#    recurse: false
#  register: vitis_versions
#
#- debug:
#    msg: "{{vitis_versions}}"
#
#
#- name: test
#  assert:
#    that:
#      - vitis_versions.files|length == 1
#      - vitis_versions.files[0].path == "/tools/Xilinx/Vitis/{{amd_apm_release}}"
#
